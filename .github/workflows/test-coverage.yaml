on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

permissions: read-all

jobs:
  test-coverage:
    runs-on: windows-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      MESSKETTEN_SERVER: ${{ secrets.MESSKETTEN_SERVER }} 
      MESSKETTEN_USER:  ${{ secrets.MESSKETTEN_USER }} 
      MESSKETTEN_PASSWORD: ${{ secrets.MESSKETTEN_PASSWORD }} 

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran(c("covr", "xml2"))
        shell: Rscript {0}

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}

      - name: Upload coverage to Codecov
        run: |
          Invoke-WebRequest -Uri "https://codecov.io/bash" -OutFile "codecov.sh"
          bash codecov.sh -f cobertura.xml -t ${{ secrets.CODECOV_TOKEN }}
        shell: pwsh

      - name: Show testthat output
        if: always()
        run: |
          Get-ChildItem -Recurse -Path "$env:RUNNER_TEMP\package" -Filter "testthat.Rout*" | ForEach-Object {
            Get-Content $_.FullName
          }
        shell: pwsh

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
